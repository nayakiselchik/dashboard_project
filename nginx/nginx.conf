user  nginx;
worker_processes  auto;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log   warn;

    # --------------------------------------
    # HTTP→HTTPS redirect
    # --------------------------------------
    server {
        listen      80;
        server_name your.domain.com;   # ← replace with your actual domain
        return 301  https://$host$request_uri;
    }

    # --------------------------------------
    # HTTPS server block
    # --------------------------------------
    server {
        listen              443 ssl http2;
        server_name         your.domain.com;  # ← replace

        # TLS Certs
        ssl_certificate      /etc/nginx/certs/server.crt;
        ssl_certificate_key  /etc/nginx/certs/server.key;
        ssl_protocols        TLSv1.2 TLSv1.3;
        ssl_ciphers          HIGH:!aNULL:!MD5;

        # Serve static files directly from the shared volume:
        location /static/ {
            alias /app/staticfiles/;
            # /app/staticfiles is the mount from static_volume
        }

        # Proxy everything else to the Django web container
        location / {
            proxy_set_header  Host               $host;
            proxy_set_header  X-Real-IP          $remote_addr;
            proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto  $scheme;
            proxy_pass        http://web:8000;
        }
    }

    # Catch-all for any unmatched server_name
    server {
        listen      80 default_server;
        listen      443 ssl http2 default_server;
        server_name _;
        return 444;
    }
}
